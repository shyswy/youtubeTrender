spring:
  application:
    name: kotlin-spring-kafka-sample
  kafka:
    bootstrap-servers: localhost:9092
#    bootstrap-servers: kafka:29092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: "*"
        allow.auto.create.topic: false
    listener:
      concurrency: 1
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: -1


youtube:
  api-key: AIzaSyA19t5rOpwc2vTzWBLpmXd0mWgzbH04uFk

#  datasource:
#    #    url: jdbc:h2:mem:study  # In-memory H2 database
#    url: jdbc:h2:./h2db;AUTO_SERVER=true;mode=mysql  # In-memory H2 database
#    username: sa
#    password:
#    driver-class-name: org.h2.Driver
#  h2:
#    console:
#      enabled: true
#  #      path: /h2-console

#  jpa:
#    hibernate:
#      ddl-auto: create
#    #    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
#        use_sql_comments: true
#        dialect: org.hibernate.dialect.H2Dialect
##        default_batch_fetch_size: 100


#logging:
#  pattern:
#    console: "[%d{HH:mm:ss.SSS}[%-5level][%logger.%method:line%line] - %msg%n"
#  level:
#    org:
#      hibernate.orm.jdbc.bind: trace
#      hibernate.SQL: debug